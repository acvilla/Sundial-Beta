// This file is generated by Ember Desktop.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __EMBER_AF_DEBUG_PRINTING_CONFIGURATION__
#define __EMBER_AF_DEBUG_PRINTING_CONFIGURATION__




// This file contains the generated macros for the debug printing
// Global macro, if this is commented out, there is no printing
#define EMBER_AF_PRINT_ENABLE



// Generated bit array and name array that is used by thedebug printing library.
#define EMBER_AF_PRINT_CORE 0x0001
#define EMBER_AF_PRINT_APP 0x0002
#define EMBER_AF_PRINT_BITS { 0x03 }
#define EMBER_AF_PRINT_NAMES { \
  "Core",\
  "Application",\
  NULL\
}
#define EMBER_AF_PRINT_NAME_NUMBER 2


// Generated functions for use within plugin Command Interpreter
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER)
#define emberAfPluginCommandInterpreterPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER, __VA_ARGS__)
#define emberAfPluginCommandInterpreterPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCommandInterpreterFlush()
#define emberAfPluginCommandInterpreterDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER) ) { x; }
#define emberAfPluginCommandInterpreterPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER, (buffer), (len), (withSpace))
#define emberAfPluginCommandInterpreterPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER, (buffer))
#else
#define emberAfPluginCommandInterpreterPrint(...)
#define emberAfPluginCommandInterpreterPrintln(...)
#define emberAfPluginCommandInterpreterFlush()
#define emberAfPluginCommandInterpreterDebugExec(x)
#define emberAfPluginCommandInterpreterPrintBuffer(buffer, len, withSpace)
#define emberAfPluginCommandInterpreterPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER)


// Generated functions for use within plugin Debug Print
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT)
#define emberAfPluginDebugPrintPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT, __VA_ARGS__)
#define emberAfPluginDebugPrintPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDebugPrintFlush()
#define emberAfPluginDebugPrintDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT) ) { x; }
#define emberAfPluginDebugPrintPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT, (buffer), (len), (withSpace))
#define emberAfPluginDebugPrintPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT, (buffer))
#else
#define emberAfPluginDebugPrintPrint(...)
#define emberAfPluginDebugPrintPrintln(...)
#define emberAfPluginDebugPrintFlush()
#define emberAfPluginDebugPrintDebugExec(x)
#define emberAfPluginDebugPrintPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDebugPrintPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT)


// Generated functions for use within plugin Diagnostic
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC)
#define emberAfPluginDiagnosticPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC, __VA_ARGS__)
#define emberAfPluginDiagnosticPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDiagnosticFlush()
#define emberAfPluginDiagnosticDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC) ) { x; }
#define emberAfPluginDiagnosticPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC, (buffer), (len), (withSpace))
#define emberAfPluginDiagnosticPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC, (buffer))
#else
#define emberAfPluginDiagnosticPrint(...)
#define emberAfPluginDiagnosticPrintln(...)
#define emberAfPluginDiagnosticFlush()
#define emberAfPluginDiagnosticDebugExec(x)
#define emberAfPluginDiagnosticPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDiagnosticPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC)


// Generated functions for use within plugin HAL library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_HAL_EZR32)
#define emberAfPluginHalEzr32Print(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_HAL_EZR32, __VA_ARGS__)
#define emberAfPluginHalEzr32Println(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_HAL_EZR32,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginHalEzr32Flush()
#define emberAfPluginHalEzr32DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_HAL_EZR32) ) { x; }
#define emberAfPluginHalEzr32PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_HAL_EZR32, (buffer), (len), (withSpace))
#define emberAfPluginHalEzr32PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_HAL_EZR32, (buffer))
#else
#define emberAfPluginHalEzr32Print(...)
#define emberAfPluginHalEzr32Println(...)
#define emberAfPluginHalEzr32Flush()
#define emberAfPluginHalEzr32DebugExec(x)
#define emberAfPluginHalEzr32PrintBuffer(buffer, len, withSpace)
#define emberAfPluginHalEzr32PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_HAL_EZR32)


// Generated functions for use within plugin Idle/Sleep
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP)
#define emberAfPluginIdleSleepPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP, __VA_ARGS__)
#define emberAfPluginIdleSleepPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginIdleSleepFlush()
#define emberAfPluginIdleSleepDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP) ) { x; }
#define emberAfPluginIdleSleepPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP, (buffer), (len), (withSpace))
#define emberAfPluginIdleSleepPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP, (buffer))
#else
#define emberAfPluginIdleSleepPrint(...)
#define emberAfPluginIdleSleepPrintln(...)
#define emberAfPluginIdleSleepFlush()
#define emberAfPluginIdleSleepDebugExec(x)
#define emberAfPluginIdleSleepPrintBuffer(buffer, len, withSpace)
#define emberAfPluginIdleSleepPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP)


// Generated functions for use within plugin Mailbox Client
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT)
#define emberAfPluginMailboxClientPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT, __VA_ARGS__)
#define emberAfPluginMailboxClientPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginMailboxClientFlush()
#define emberAfPluginMailboxClientDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT) ) { x; }
#define emberAfPluginMailboxClientPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT, (buffer), (len), (withSpace))
#define emberAfPluginMailboxClientPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT, (buffer))
#else
#define emberAfPluginMailboxClientPrint(...)
#define emberAfPluginMailboxClientPrintln(...)
#define emberAfPluginMailboxClientFlush()
#define emberAfPluginMailboxClientDebugExec(x)
#define emberAfPluginMailboxClientPrintBuffer(buffer, len, withSpace)
#define emberAfPluginMailboxClientPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAILBOX_CLIENT)


// Generated functions for use within plugin Mailbox Server
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER)
#define emberAfPluginMailboxServerPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER, __VA_ARGS__)
#define emberAfPluginMailboxServerPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginMailboxServerFlush()
#define emberAfPluginMailboxServerDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER) ) { x; }
#define emberAfPluginMailboxServerPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER, (buffer), (len), (withSpace))
#define emberAfPluginMailboxServerPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER, (buffer))
#else
#define emberAfPluginMailboxServerPrint(...)
#define emberAfPluginMailboxServerPrintln(...)
#define emberAfPluginMailboxServerFlush()
#define emberAfPluginMailboxServerDebugExec(x)
#define emberAfPluginMailboxServerPrintBuffer(buffer, len, withSpace)
#define emberAfPluginMailboxServerPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAILBOX_SERVER)


// Generated functions for use within plugin Main
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAIN)
#define emberAfPluginMainPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_MAIN, __VA_ARGS__)
#define emberAfPluginMainPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_MAIN,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginMainFlush()
#define emberAfPluginMainDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_MAIN) ) { x; }
#define emberAfPluginMainPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_MAIN, (buffer), (len), (withSpace))
#define emberAfPluginMainPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_MAIN, (buffer))
#else
#define emberAfPluginMainPrint(...)
#define emberAfPluginMainPrintln(...)
#define emberAfPluginMainFlush()
#define emberAfPluginMainDebugExec(x)
#define emberAfPluginMainPrintBuffer(buffer, len, withSpace)
#define emberAfPluginMainPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAIN)


// Generated functions for use within plugin EzRadio PHY
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO)
#define emberAfPluginPhyEzradioPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO, __VA_ARGS__)
#define emberAfPluginPhyEzradioPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginPhyEzradioFlush()
#define emberAfPluginPhyEzradioDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO) ) { x; }
#define emberAfPluginPhyEzradioPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO, (buffer), (len), (withSpace))
#define emberAfPluginPhyEzradioPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO, (buffer))
#else
#define emberAfPluginPhyEzradioPrint(...)
#define emberAfPluginPhyEzradioPrintln(...)
#define emberAfPluginPhyEzradioFlush()
#define emberAfPluginPhyEzradioDebugExec(x)
#define emberAfPluginPhyEzradioPrintBuffer(buffer, len, withSpace)
#define emberAfPluginPhyEzradioPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_PHY_EZRADIO)


// Generated functions for use within plugin Poll
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_POLL)
#define emberAfPluginPollPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_POLL, __VA_ARGS__)
#define emberAfPluginPollPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_POLL,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginPollFlush()
#define emberAfPluginPollDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_POLL) ) { x; }
#define emberAfPluginPollPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_POLL, (buffer), (len), (withSpace))
#define emberAfPluginPollPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_POLL, (buffer))
#else
#define emberAfPluginPollPrint(...)
#define emberAfPluginPollPrintln(...)
#define emberAfPluginPollFlush()
#define emberAfPluginPollDebugExec(x)
#define emberAfPluginPollPrintBuffer(buffer, len, withSpace)
#define emberAfPluginPollPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_POLL)


// Generated functions for use within plugin Serial
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SERIAL)
#define emberAfPluginSerialPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_SERIAL, __VA_ARGS__)
#define emberAfPluginSerialPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_SERIAL,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginSerialFlush()
#define emberAfPluginSerialDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_SERIAL) ) { x; }
#define emberAfPluginSerialPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_SERIAL, (buffer), (len), (withSpace))
#define emberAfPluginSerialPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_SERIAL, (buffer))
#else
#define emberAfPluginSerialPrint(...)
#define emberAfPluginSerialPrintln(...)
#define emberAfPluginSerialFlush()
#define emberAfPluginSerialDebugExec(x)
#define emberAfPluginSerialPrintBuffer(buffer, len, withSpace)
#define emberAfPluginSerialPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SERIAL)


// Generated functions for use within plugin Simulated EEPROM version 1 Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1)
#define emberAfPluginSimEeprom1Print(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1, __VA_ARGS__)
#define emberAfPluginSimEeprom1Println(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginSimEeprom1Flush()
#define emberAfPluginSimEeprom1DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1) ) { x; }
#define emberAfPluginSimEeprom1PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1, (buffer), (len), (withSpace))
#define emberAfPluginSimEeprom1PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1, (buffer))
#else
#define emberAfPluginSimEeprom1Print(...)
#define emberAfPluginSimEeprom1Println(...)
#define emberAfPluginSimEeprom1Flush()
#define emberAfPluginSimEeprom1DebugExec(x)
#define emberAfPluginSimEeprom1PrintBuffer(buffer, len, withSpace)
#define emberAfPluginSimEeprom1PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1)


// Generated functions for use within plugin Security AES
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY)
#define emberAfPluginStackAesSecurityPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY, __VA_ARGS__)
#define emberAfPluginStackAesSecurityPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackAesSecurityFlush()
#define emberAfPluginStackAesSecurityDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY) ) { x; }
#define emberAfPluginStackAesSecurityPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY, (buffer), (len), (withSpace))
#define emberAfPluginStackAesSecurityPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY, (buffer))
#else
#define emberAfPluginStackAesSecurityPrint(...)
#define emberAfPluginStackAesSecurityPrintln(...)
#define emberAfPluginStackAesSecurityFlush()
#define emberAfPluginStackAesSecurityDebugExec(x)
#define emberAfPluginStackAesSecurityPrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackAesSecurityPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_AES_SECURITY)


// Generated functions for use within plugin Stack Common
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_COMMON)
#define emberAfPluginStackCommonPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_COMMON, __VA_ARGS__)
#define emberAfPluginStackCommonPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_COMMON,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackCommonFlush()
#define emberAfPluginStackCommonDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_COMMON) ) { x; }
#define emberAfPluginStackCommonPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_COMMON, (buffer), (len), (withSpace))
#define emberAfPluginStackCommonPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_COMMON, (buffer))
#else
#define emberAfPluginStackCommonPrint(...)
#define emberAfPluginStackCommonPrintln(...)
#define emberAfPluginStackCommonFlush()
#define emberAfPluginStackCommonDebugExec(x)
#define emberAfPluginStackCommonPrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackCommonPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_COMMON)


// Generated functions for use within plugin Stack packet counters
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS)
#define emberAfPluginStackCountersPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS, __VA_ARGS__)
#define emberAfPluginStackCountersPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackCountersFlush()
#define emberAfPluginStackCountersDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS) ) { x; }
#define emberAfPluginStackCountersPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS, (buffer), (len), (withSpace))
#define emberAfPluginStackCountersPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS, (buffer))
#else
#define emberAfPluginStackCountersPrint(...)
#define emberAfPluginStackCountersPrintln(...)
#define emberAfPluginStackCountersFlush()
#define emberAfPluginStackCountersDebugExec(x)
#define emberAfPluginStackCountersPrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackCountersPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_COUNTERS)


// Generated functions for use within plugin Form and Join
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN)
#define emberAfPluginStackFormAndJoinPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN, __VA_ARGS__)
#define emberAfPluginStackFormAndJoinPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackFormAndJoinFlush()
#define emberAfPluginStackFormAndJoinDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN) ) { x; }
#define emberAfPluginStackFormAndJoinPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN, (buffer), (len), (withSpace))
#define emberAfPluginStackFormAndJoinPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN, (buffer))
#else
#define emberAfPluginStackFormAndJoinPrint(...)
#define emberAfPluginStackFormAndJoinPrintln(...)
#define emberAfPluginStackFormAndJoinFlush()
#define emberAfPluginStackFormAndJoinDebugExec(x)
#define emberAfPluginStackFormAndJoinPrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackFormAndJoinPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_FORM_AND_JOIN)


// Generated functions for use within plugin MAC Packet Queue
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE)
#define emberAfPluginStackMacQueuePrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE, __VA_ARGS__)
#define emberAfPluginStackMacQueuePrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackMacQueueFlush()
#define emberAfPluginStackMacQueueDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE) ) { x; }
#define emberAfPluginStackMacQueuePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE, (buffer), (len), (withSpace))
#define emberAfPluginStackMacQueuePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE, (buffer))
#else
#define emberAfPluginStackMacQueuePrint(...)
#define emberAfPluginStackMacQueuePrintln(...)
#define emberAfPluginStackMacQueueFlush()
#define emberAfPluginStackMacQueueDebugExec(x)
#define emberAfPluginStackMacQueuePrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackMacQueuePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_MAC_QUEUE)


// Generated functions for use within plugin Parent Support
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT)
#define emberAfPluginStackParentSupportPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT, __VA_ARGS__)
#define emberAfPluginStackParentSupportPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackParentSupportFlush()
#define emberAfPluginStackParentSupportDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT) ) { x; }
#define emberAfPluginStackParentSupportPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT, (buffer), (len), (withSpace))
#define emberAfPluginStackParentSupportPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT, (buffer))
#else
#define emberAfPluginStackParentSupportPrint(...)
#define emberAfPluginStackParentSupportPrintln(...)
#define emberAfPluginStackParentSupportFlush()
#define emberAfPluginStackParentSupportDebugExec(x)
#define emberAfPluginStackParentSupportPrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackParentSupportPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_PARENT_SUPPORT)


// Generated functions for use within plugin Security XXTEA
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY)
#define emberAfPluginStackXxteaSecurityPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY, __VA_ARGS__)
#define emberAfPluginStackXxteaSecurityPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginStackXxteaSecurityFlush()
#define emberAfPluginStackXxteaSecurityDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY) ) { x; }
#define emberAfPluginStackXxteaSecurityPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY, (buffer), (len), (withSpace))
#define emberAfPluginStackXxteaSecurityPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY, (buffer))
#else
#define emberAfPluginStackXxteaSecurityPrint(...)
#define emberAfPluginStackXxteaSecurityPrintln(...)
#define emberAfPluginStackXxteaSecurityFlush()
#define emberAfPluginStackXxteaSecurityDebugExec(x)
#define emberAfPluginStackXxteaSecurityPrintBuffer(buffer, len, withSpace)
#define emberAfPluginStackXxteaSecurityPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_STACK_XXTEA_SECURITY)


// Generated functions for use within area Core
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CORE)
#define emberAfCorePrint(...) emberAfPrint(EMBER_AF_PRINT_CORE, __VA_ARGS__)
#define emberAfCorePrintln(...) emberAfPrintln(EMBER_AF_PRINT_CORE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCoreFlush()
#define emberAfCoreDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CORE) ) { x; }
#define emberAfCorePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CORE, (buffer), (len), (withSpace))
#define emberAfCorePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CORE, (buffer))
#else
#define emberAfCorePrint(...)
#define emberAfCorePrintln(...)
#define emberAfCoreFlush()
#define emberAfCoreDebugExec(x)
#define emberAfCorePrintBuffer(buffer, len, withSpace)
#define emberAfCorePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CORE)


// Generated functions for use within area Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_DEBUG)
#define emberAfDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_DEBUG, __VA_ARGS__)
#define emberAfDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfDebugFlush()
#define emberAfDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_DEBUG) ) { x; }
#define emberAfDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_DEBUG, (buffer), (len), (withSpace))
#define emberAfDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_DEBUG, (buffer))
#else
#define emberAfDebugPrint(...)
#define emberAfDebugPrintln(...)
#define emberAfDebugFlush()
#define emberAfDebugDebugExec(x)
#define emberAfDebugPrintBuffer(buffer, len, withSpace)
#define emberAfDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_DEBUG)


// Generated functions for use within area Application
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
#define emberAfAppPrint(...) emberAfPrint(EMBER_AF_PRINT_APP, __VA_ARGS__)
#define emberAfAppPrintln(...) emberAfPrintln(EMBER_AF_PRINT_APP,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfAppFlush()
#define emberAfAppDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_APP) ) { x; }
#define emberAfAppPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_APP, (buffer), (len), (withSpace))
#define emberAfAppPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_APP, (buffer))
#else
#define emberAfAppPrint(...)
#define emberAfAppPrintln(...)
#define emberAfAppFlush()
#define emberAfAppDebugExec(x)
#define emberAfAppPrintBuffer(buffer, len, withSpace)
#define emberAfAppPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)


// Generated functions for use within area Custom messages (1)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM1)
#define emberAfCustom1Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM1, __VA_ARGS__)
#define emberAfCustom1Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM1,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom1Flush()
#define emberAfCustom1DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM1) ) { x; }
#define emberAfCustom1PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM1, (buffer), (len), (withSpace))
#define emberAfCustom1PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM1, (buffer))
#else
#define emberAfCustom1Print(...)
#define emberAfCustom1Println(...)
#define emberAfCustom1Flush()
#define emberAfCustom1DebugExec(x)
#define emberAfCustom1PrintBuffer(buffer, len, withSpace)
#define emberAfCustom1PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM1)


// Generated functions for use within area Custom messages (2)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM2)
#define emberAfCustom2Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM2, __VA_ARGS__)
#define emberAfCustom2Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM2,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom2Flush()
#define emberAfCustom2DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM2) ) { x; }
#define emberAfCustom2PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM2, (buffer), (len), (withSpace))
#define emberAfCustom2PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM2, (buffer))
#else
#define emberAfCustom2Print(...)
#define emberAfCustom2Println(...)
#define emberAfCustom2Flush()
#define emberAfCustom2DebugExec(x)
#define emberAfCustom2PrintBuffer(buffer, len, withSpace)
#define emberAfCustom2PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM2)


// Generated functions for use within area Custom messages (3)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM3)
#define emberAfCustom3Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM3, __VA_ARGS__)
#define emberAfCustom3Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM3,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom3Flush()
#define emberAfCustom3DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM3) ) { x; }
#define emberAfCustom3PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM3, (buffer), (len), (withSpace))
#define emberAfCustom3PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM3, (buffer))
#else
#define emberAfCustom3Print(...)
#define emberAfCustom3Println(...)
#define emberAfCustom3Flush()
#define emberAfCustom3DebugExec(x)
#define emberAfCustom3PrintBuffer(buffer, len, withSpace)
#define emberAfCustom3PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM3)


#endif // __EMBER_AF_DEBUG_PRINTING_CONFIGURATION__
