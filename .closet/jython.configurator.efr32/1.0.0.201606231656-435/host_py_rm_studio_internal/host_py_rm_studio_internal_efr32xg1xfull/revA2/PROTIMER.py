
__all__ = [ 'RM_Peripheral_PROTIMER' ]

from static import Base_RM_Peripheral
from PROTIMER_register import *

class RM_Peripheral_PROTIMER(Base_RM_Peripheral):
    def __init__(self, rmio, label):
        self.__dict__['zz_frozen'] = False
        super(RM_Peripheral_PROTIMER, self).__init__(rmio, label,
            0x40085000, 'PROTIMER',
            "")
        self.CTRL = RM_Register_PROTIMER_CTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['CTRL'] = self.CTRL
        self.CMD = RM_Register_PROTIMER_CMD(self.zz_rmio, self.zz_label)
        self.zz_rdict['CMD'] = self.CMD
        self.PRSCTRL = RM_Register_PROTIMER_PRSCTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['PRSCTRL'] = self.PRSCTRL
        self.STATUS = RM_Register_PROTIMER_STATUS(self.zz_rmio, self.zz_label)
        self.zz_rdict['STATUS'] = self.STATUS
        self.PRECNT = RM_Register_PROTIMER_PRECNT(self.zz_rmio, self.zz_label)
        self.zz_rdict['PRECNT'] = self.PRECNT
        self.BASECNT = RM_Register_PROTIMER_BASECNT(self.zz_rmio, self.zz_label)
        self.zz_rdict['BASECNT'] = self.BASECNT
        self.WRAPCNT = RM_Register_PROTIMER_WRAPCNT(self.zz_rmio, self.zz_label)
        self.zz_rdict['WRAPCNT'] = self.WRAPCNT
        self.BASEPRE = RM_Register_PROTIMER_BASEPRE(self.zz_rmio, self.zz_label)
        self.zz_rdict['BASEPRE'] = self.BASEPRE
        self.LWRAPCNT = RM_Register_PROTIMER_LWRAPCNT(self.zz_rmio, self.zz_label)
        self.zz_rdict['LWRAPCNT'] = self.LWRAPCNT
        self.PRECNTTOPADJ = RM_Register_PROTIMER_PRECNTTOPADJ(self.zz_rmio, self.zz_label)
        self.zz_rdict['PRECNTTOPADJ'] = self.PRECNTTOPADJ
        self.PRECNTTOP = RM_Register_PROTIMER_PRECNTTOP(self.zz_rmio, self.zz_label)
        self.zz_rdict['PRECNTTOP'] = self.PRECNTTOP
        self.BASECNTTOP = RM_Register_PROTIMER_BASECNTTOP(self.zz_rmio, self.zz_label)
        self.zz_rdict['BASECNTTOP'] = self.BASECNTTOP
        self.WRAPCNTTOP = RM_Register_PROTIMER_WRAPCNTTOP(self.zz_rmio, self.zz_label)
        self.zz_rdict['WRAPCNTTOP'] = self.WRAPCNTTOP
        self.TOUT0CNT = RM_Register_PROTIMER_TOUT0CNT(self.zz_rmio, self.zz_label)
        self.zz_rdict['TOUT0CNT'] = self.TOUT0CNT
        self.TOUT0CNTTOP = RM_Register_PROTIMER_TOUT0CNTTOP(self.zz_rmio, self.zz_label)
        self.zz_rdict['TOUT0CNTTOP'] = self.TOUT0CNTTOP
        self.TOUT0COMP = RM_Register_PROTIMER_TOUT0COMP(self.zz_rmio, self.zz_label)
        self.zz_rdict['TOUT0COMP'] = self.TOUT0COMP
        self.TOUT1CNT = RM_Register_PROTIMER_TOUT1CNT(self.zz_rmio, self.zz_label)
        self.zz_rdict['TOUT1CNT'] = self.TOUT1CNT
        self.TOUT1CNTTOP = RM_Register_PROTIMER_TOUT1CNTTOP(self.zz_rmio, self.zz_label)
        self.zz_rdict['TOUT1CNTTOP'] = self.TOUT1CNTTOP
        self.TOUT1COMP = RM_Register_PROTIMER_TOUT1COMP(self.zz_rmio, self.zz_label)
        self.zz_rdict['TOUT1COMP'] = self.TOUT1COMP
        self.LBTCTRL = RM_Register_PROTIMER_LBTCTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['LBTCTRL'] = self.LBTCTRL
        self.LBTPRSCTRL = RM_Register_PROTIMER_LBTPRSCTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['LBTPRSCTRL'] = self.LBTPRSCTRL
        self.LBTSTATE = RM_Register_PROTIMER_LBTSTATE(self.zz_rmio, self.zz_label)
        self.zz_rdict['LBTSTATE'] = self.LBTSTATE
        self.RANDOM = RM_Register_PROTIMER_RANDOM(self.zz_rmio, self.zz_label)
        self.zz_rdict['RANDOM'] = self.RANDOM
        self.IF = RM_Register_PROTIMER_IF(self.zz_rmio, self.zz_label)
        self.zz_rdict['IF'] = self.IF
        self.IFS = RM_Register_PROTIMER_IFS(self.zz_rmio, self.zz_label)
        self.zz_rdict['IFS'] = self.IFS
        self.IFC = RM_Register_PROTIMER_IFC(self.zz_rmio, self.zz_label)
        self.zz_rdict['IFC'] = self.IFC
        self.IEN = RM_Register_PROTIMER_IEN(self.zz_rmio, self.zz_label)
        self.zz_rdict['IEN'] = self.IEN
        self.RXCTRL = RM_Register_PROTIMER_RXCTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['RXCTRL'] = self.RXCTRL
        self.TXCTRL = RM_Register_PROTIMER_TXCTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['TXCTRL'] = self.TXCTRL
        self.CC0_CTRL = RM_Register_PROTIMER_CC0_CTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC0_CTRL'] = self.CC0_CTRL
        self.CC0_PRE = RM_Register_PROTIMER_CC0_PRE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC0_PRE'] = self.CC0_PRE
        self.CC0_BASE = RM_Register_PROTIMER_CC0_BASE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC0_BASE'] = self.CC0_BASE
        self.CC0_WRAP = RM_Register_PROTIMER_CC0_WRAP(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC0_WRAP'] = self.CC0_WRAP
        self.CC1_CTRL = RM_Register_PROTIMER_CC1_CTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC1_CTRL'] = self.CC1_CTRL
        self.CC1_PRE = RM_Register_PROTIMER_CC1_PRE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC1_PRE'] = self.CC1_PRE
        self.CC1_BASE = RM_Register_PROTIMER_CC1_BASE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC1_BASE'] = self.CC1_BASE
        self.CC1_WRAP = RM_Register_PROTIMER_CC1_WRAP(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC1_WRAP'] = self.CC1_WRAP
        self.CC2_CTRL = RM_Register_PROTIMER_CC2_CTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC2_CTRL'] = self.CC2_CTRL
        self.CC2_PRE = RM_Register_PROTIMER_CC2_PRE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC2_PRE'] = self.CC2_PRE
        self.CC2_BASE = RM_Register_PROTIMER_CC2_BASE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC2_BASE'] = self.CC2_BASE
        self.CC2_WRAP = RM_Register_PROTIMER_CC2_WRAP(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC2_WRAP'] = self.CC2_WRAP
        self.CC3_CTRL = RM_Register_PROTIMER_CC3_CTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC3_CTRL'] = self.CC3_CTRL
        self.CC3_PRE = RM_Register_PROTIMER_CC3_PRE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC3_PRE'] = self.CC3_PRE
        self.CC3_BASE = RM_Register_PROTIMER_CC3_BASE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC3_BASE'] = self.CC3_BASE
        self.CC3_WRAP = RM_Register_PROTIMER_CC3_WRAP(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC3_WRAP'] = self.CC3_WRAP
        self.CC4_CTRL = RM_Register_PROTIMER_CC4_CTRL(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC4_CTRL'] = self.CC4_CTRL
        self.CC4_PRE = RM_Register_PROTIMER_CC4_PRE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC4_PRE'] = self.CC4_PRE
        self.CC4_BASE = RM_Register_PROTIMER_CC4_BASE(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC4_BASE'] = self.CC4_BASE
        self.CC4_WRAP = RM_Register_PROTIMER_CC4_WRAP(self.zz_rmio, self.zz_label)
        self.zz_rdict['CC4_WRAP'] = self.CC4_WRAP
        self.__dict__['zz_frozen'] = True